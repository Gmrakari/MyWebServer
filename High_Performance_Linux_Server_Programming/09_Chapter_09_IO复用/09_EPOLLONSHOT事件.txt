
并发程序就会引起一个问题，使用ET模式，一个socket上的某个事件还是可能被触发多次。

两个线程同时操作一个socket的局面，

我们期望的是一个socket连接在任一时刻都只被一个线程处理

对于注册了EPOLLONESHOT事件的文件描述符，操作系统最多触发其上注册的一个可读、可写或者异常事件，且只处罚一次，除非我们使用epoll_ctl函数重置该文件描述符上注册的EPOLLONESHOT事件。

这样，当一个线程在处理某个socket时，其他线程是不可能有机会操作该socket的。

注册了EPOLLONESHOT事件，以确保这个socket下一次可读时，其EPOLLIN事件能被处罚，进而让其他工作线程有机会继续处理这个socket


