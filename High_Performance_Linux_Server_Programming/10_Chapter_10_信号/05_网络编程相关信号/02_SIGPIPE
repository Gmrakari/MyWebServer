
//默认情况下，往一个读端关闭的管道或socket连接中写数据将引发SIGPEPE信号。
//我们需要在代码中捕获并处理该信号，或者至少忽略它，因为程序接收到SIGPIPE信号的默认行为是结束进程
//而我们绝对不希望因为错误的写操作而导致程序退出。引起SIGPIPE信号的写操作将设置errno为EPIPE

//此外，我们也可以利用I/O复用系统调用来检测管道和socket连接的读端是否已经关闭。
//以poll为例，当管道的读端关闭时，写端文件描述符上的POLLHUP事件将被触发；
//当socket连接被对方关闭时，socket上的POLLRDHUP事件将被触发

