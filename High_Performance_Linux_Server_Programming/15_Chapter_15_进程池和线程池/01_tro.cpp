

/*
 * Date:2021-05-31 20:45
 * filename:01_tro.cpp
 *
 */

/*
 * 通过动态创建子进程(或子线程)来实现并发服务器,有如缺点:
 *	动态创建进程(或线程)是比较耗费时间的，这样导致较慢的客户响应。
 *	动态创建的子进程(或子线程)通常只用来为一个客户服务(除非我们做特殊的处理),
 *这样导致系统上产生大量的细微进程(或线程)。进程(或线程)间的切换消耗大量的CPU时间
 *  动态创建的子进程是当前进程的完整映像。当前进程必须谨慎地管理其分配地文件描述符
 *和堆内存等系统资源，否则子进程可能复制这些资源，从而使系统的可用资源急剧下降
 *进而影响服务器的性能
 * 
 */

/*
 * 当有新的任务到来时，主进程将通过某种方式选择进程池中的某一个子进程来为之服务。
 * 相比于动态创建子进程，选择一个已经存在的子进程的代价显然要小得多。
 * 至于主进程选择哪个子进程来为新任务服务，则有两种方式:
 * 1-主进程使用某种算法来主动选择子进程。最简单、最常见的算法是随机算法
 *和Round Robin(轮流选取)算法,但更优秀、更智能的算法将使任务在各个工作进程中
 *更均匀地分配，从而减轻服务器的整体压力。
 * 2-进程和所有子进程通过一个共享的工作队列来同步，子进程都睡眠在该工作队列上。
 *当有新的任务到来时，主进程将任务添加到工作队列中。这将唤醒正在等待任务的子进程
 *不过只有一个子进程获得新任务的"接管权",它可以从工作队列中取出任务并执行之，
 *而其他子进程将继续睡眠在工作队列上。
 *
 */

