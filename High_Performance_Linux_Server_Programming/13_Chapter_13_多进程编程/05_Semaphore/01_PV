
/*
 * Date:2021-05-07 21:21
 * file:信号量原语
 *
 */

程序对共享资源的访问的代码只是很短的一段，但就是这一段代码引发了进程之间的竟态条件。
我们称这段代码为关键代码段，或者临界区。对进程同步，也就是确保任一时刻只有一个进程能够进入关键代码段

Dijkstra提出信号量(Semaphore)
信号量是一种特殊的变量，它只能取自然数并且只支持两种操作:等待(wait)和信号(signal)
在Linux/UNIX中,"等待"和"信号"都已经具有特殊的含义，所以对信号量的这两种操作更常用的称呼是P、V操作

来源于荷兰单词
P --> passeren(传递，就好像进入临界区)
V --> vrijgeven(释放，就好像退出临界区)

假设有信号量SV,则对它的P、V操作 含义如下

P(SV),如果SV的值大于0，就将它减1;如果SV的值为0，则挂起进程的执行
V(SV),如果有其他进程因为等待SV而挂起，则唤醒之;如果没有,SV+1

Linux信号量的API都定义在sys/sem.h头文件中，主要包含3个系统调用:semget,semop,semctl
