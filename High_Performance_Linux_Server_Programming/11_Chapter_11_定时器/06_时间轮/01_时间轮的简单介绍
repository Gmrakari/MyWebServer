
基于排序链表的定时器存在一个问题：添加定时器的效率偏低。

时间轮解决了这个问题

(实线)指针指向轮子上的一个槽(slot)。
它以恒定的速度顺时针转动，每转动一步就指向下一个槽(虚线指针指向的槽),每次转动称为一个滴答(tick)
一个滴答的事件称为时间轮的槽间隔si(slot interval),它实际上就是心搏时间

该时间轮共有N个槽，因此它运转一周的时间是N*si。
每个槽指向一条定时器链表，每条链表上的定时器具有相同的特征:它们的定时时间相差N*si的整数倍

时间轮正是利用这个关系将定时器散列到不同的链表中。

假如现在指针指向槽cs,我们要添加一个定时时间为ti的定时器，则该定时器将被插入槽ts(timer slot)对应的链表中:
ts = (cs + (ti/si)) %N

基于排序链表的定时器使用唯一的一条链表来管理所有定时器，所以插入操作的效率随着定时器数目的增多而降低。

而时间轮使用哈希表的思想，将定时器散列到不同的链表上。

这样每条链表上的定时器数据都将明显小于原来的排序链表上的定时器数目，插入操作的效率基本不受定时器数目的影响


